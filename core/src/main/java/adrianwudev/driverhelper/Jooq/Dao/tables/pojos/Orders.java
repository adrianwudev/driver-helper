/*
 * This file is generated by jOOQ.
 */
package adrianwudev.driverhelper.Jooq.Dao.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Orders implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer orderId;
    private String city;
    private String district;
    private String address;
    private LocalDateTime orderTime;
    private String pickUpDrop;
    private LocalDateTime pickUpTime;
    private String weekday;
    private String groupName;
    private Double amount;
    private Double distance;
    private Boolean isException;
    private Integer repeatCount;
    private LocalDateTime createTime;
    private LocalDateTime modifyTime;

    public Orders() {}

    public Orders(Orders value) {
        this.orderId = value.orderId;
        this.city = value.city;
        this.district = value.district;
        this.address = value.address;
        this.orderTime = value.orderTime;
        this.pickUpDrop = value.pickUpDrop;
        this.pickUpTime = value.pickUpTime;
        this.weekday = value.weekday;
        this.groupName = value.groupName;
        this.amount = value.amount;
        this.distance = value.distance;
        this.isException = value.isException;
        this.repeatCount = value.repeatCount;
        this.createTime = value.createTime;
        this.modifyTime = value.modifyTime;
    }

    public Orders(
        Integer orderId,
        String city,
        String district,
        String address,
        LocalDateTime orderTime,
        String pickUpDrop,
        LocalDateTime pickUpTime,
        String weekday,
        String groupName,
        Double amount,
        Double distance,
        Boolean isException,
        Integer repeatCount,
        LocalDateTime createTime,
        LocalDateTime modifyTime
    ) {
        this.orderId = orderId;
        this.city = city;
        this.district = district;
        this.address = address;
        this.orderTime = orderTime;
        this.pickUpDrop = pickUpDrop;
        this.pickUpTime = pickUpTime;
        this.weekday = weekday;
        this.groupName = groupName;
        this.amount = amount;
        this.distance = distance;
        this.isException = isException;
        this.repeatCount = repeatCount;
        this.createTime = createTime;
        this.modifyTime = modifyTime;
    }

    /**
     * Getter for <code>public.orders.order_id</code>.
     */
    public Integer getOrderId() {
        return this.orderId;
    }

    /**
     * Setter for <code>public.orders.order_id</code>.
     */
    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

    /**
     * Getter for <code>public.orders.city</code>.
     */
    public String getCity() {
        return this.city;
    }

    /**
     * Setter for <code>public.orders.city</code>.
     */
    public void setCity(String city) {
        this.city = city;
    }

    /**
     * Getter for <code>public.orders.district</code>.
     */
    public String getDistrict() {
        return this.district;
    }

    /**
     * Setter for <code>public.orders.district</code>.
     */
    public void setDistrict(String district) {
        this.district = district;
    }

    /**
     * Getter for <code>public.orders.address</code>.
     */
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>public.orders.address</code>.
     */
    public void setAddress(String address) {
        this.address = address;
    }

    /**
     * Getter for <code>public.orders.order_time</code>.
     */
    public LocalDateTime getOrderTime() {
        return this.orderTime;
    }

    /**
     * Setter for <code>public.orders.order_time</code>.
     */
    public void setOrderTime(LocalDateTime orderTime) {
        this.orderTime = orderTime;
    }

    /**
     * Getter for <code>public.orders.pick_up_drop</code>.
     */
    public String getPickUpDrop() {
        return this.pickUpDrop;
    }

    /**
     * Setter for <code>public.orders.pick_up_drop</code>.
     */
    public void setPickUpDrop(String pickUpDrop) {
        this.pickUpDrop = pickUpDrop;
    }

    /**
     * Getter for <code>public.orders.pick_up_time</code>.
     */
    public LocalDateTime getPickUpTime() {
        return this.pickUpTime;
    }

    /**
     * Setter for <code>public.orders.pick_up_time</code>.
     */
    public void setPickUpTime(LocalDateTime pickUpTime) {
        this.pickUpTime = pickUpTime;
    }

    /**
     * Getter for <code>public.orders.weekday</code>.
     */
    public String getWeekday() {
        return this.weekday;
    }

    /**
     * Setter for <code>public.orders.weekday</code>.
     */
    public void setWeekday(String weekday) {
        this.weekday = weekday;
    }

    /**
     * Getter for <code>public.orders.group_name</code>.
     */
    public String getGroupName() {
        return this.groupName;
    }

    /**
     * Setter for <code>public.orders.group_name</code>.
     */
    public void setGroupName(String groupName) {
        this.groupName = groupName;
    }

    /**
     * Getter for <code>public.orders.amount</code>.
     */
    public Double getAmount() {
        return this.amount;
    }

    /**
     * Setter for <code>public.orders.amount</code>.
     */
    public void setAmount(Double amount) {
        this.amount = amount;
    }

    /**
     * Getter for <code>public.orders.distance</code>.
     */
    public Double getDistance() {
        return this.distance;
    }

    /**
     * Setter for <code>public.orders.distance</code>.
     */
    public void setDistance(Double distance) {
        this.distance = distance;
    }

    /**
     * Getter for <code>public.orders.is_exception</code>.
     */
    public Boolean getIsException() {
        return this.isException;
    }

    /**
     * Setter for <code>public.orders.is_exception</code>.
     */
    public void setIsException(Boolean isException) {
        this.isException = isException;
    }

    /**
     * Getter for <code>public.orders.repeat_count</code>.
     */
    public Integer getRepeatCount() {
        return this.repeatCount;
    }

    /**
     * Setter for <code>public.orders.repeat_count</code>.
     */
    public void setRepeatCount(Integer repeatCount) {
        this.repeatCount = repeatCount;
    }

    /**
     * Getter for <code>public.orders.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>public.orders.create_time</code>.
     */
    public void setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
    }

    /**
     * Getter for <code>public.orders.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return this.modifyTime;
    }

    /**
     * Setter for <code>public.orders.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime modifyTime) {
        this.modifyTime = modifyTime;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Orders other = (Orders) obj;
        if (this.orderId == null) {
            if (other.orderId != null)
                return false;
        }
        else if (!this.orderId.equals(other.orderId))
            return false;
        if (this.city == null) {
            if (other.city != null)
                return false;
        }
        else if (!this.city.equals(other.city))
            return false;
        if (this.district == null) {
            if (other.district != null)
                return false;
        }
        else if (!this.district.equals(other.district))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        if (this.orderTime == null) {
            if (other.orderTime != null)
                return false;
        }
        else if (!this.orderTime.equals(other.orderTime))
            return false;
        if (this.pickUpDrop == null) {
            if (other.pickUpDrop != null)
                return false;
        }
        else if (!this.pickUpDrop.equals(other.pickUpDrop))
            return false;
        if (this.pickUpTime == null) {
            if (other.pickUpTime != null)
                return false;
        }
        else if (!this.pickUpTime.equals(other.pickUpTime))
            return false;
        if (this.weekday == null) {
            if (other.weekday != null)
                return false;
        }
        else if (!this.weekday.equals(other.weekday))
            return false;
        if (this.groupName == null) {
            if (other.groupName != null)
                return false;
        }
        else if (!this.groupName.equals(other.groupName))
            return false;
        if (this.amount == null) {
            if (other.amount != null)
                return false;
        }
        else if (!this.amount.equals(other.amount))
            return false;
        if (this.distance == null) {
            if (other.distance != null)
                return false;
        }
        else if (!this.distance.equals(other.distance))
            return false;
        if (this.isException == null) {
            if (other.isException != null)
                return false;
        }
        else if (!this.isException.equals(other.isException))
            return false;
        if (this.repeatCount == null) {
            if (other.repeatCount != null)
                return false;
        }
        else if (!this.repeatCount.equals(other.repeatCount))
            return false;
        if (this.createTime == null) {
            if (other.createTime != null)
                return false;
        }
        else if (!this.createTime.equals(other.createTime))
            return false;
        if (this.modifyTime == null) {
            if (other.modifyTime != null)
                return false;
        }
        else if (!this.modifyTime.equals(other.modifyTime))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.orderId == null) ? 0 : this.orderId.hashCode());
        result = prime * result + ((this.city == null) ? 0 : this.city.hashCode());
        result = prime * result + ((this.district == null) ? 0 : this.district.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        result = prime * result + ((this.orderTime == null) ? 0 : this.orderTime.hashCode());
        result = prime * result + ((this.pickUpDrop == null) ? 0 : this.pickUpDrop.hashCode());
        result = prime * result + ((this.pickUpTime == null) ? 0 : this.pickUpTime.hashCode());
        result = prime * result + ((this.weekday == null) ? 0 : this.weekday.hashCode());
        result = prime * result + ((this.groupName == null) ? 0 : this.groupName.hashCode());
        result = prime * result + ((this.amount == null) ? 0 : this.amount.hashCode());
        result = prime * result + ((this.distance == null) ? 0 : this.distance.hashCode());
        result = prime * result + ((this.isException == null) ? 0 : this.isException.hashCode());
        result = prime * result + ((this.repeatCount == null) ? 0 : this.repeatCount.hashCode());
        result = prime * result + ((this.createTime == null) ? 0 : this.createTime.hashCode());
        result = prime * result + ((this.modifyTime == null) ? 0 : this.modifyTime.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Orders (");

        sb.append(orderId);
        sb.append(", ").append(city);
        sb.append(", ").append(district);
        sb.append(", ").append(address);
        sb.append(", ").append(orderTime);
        sb.append(", ").append(pickUpDrop);
        sb.append(", ").append(pickUpTime);
        sb.append(", ").append(weekday);
        sb.append(", ").append(groupName);
        sb.append(", ").append(amount);
        sb.append(", ").append(distance);
        sb.append(", ").append(isException);
        sb.append(", ").append(repeatCount);
        sb.append(", ").append(createTime);
        sb.append(", ").append(modifyTime);

        sb.append(")");
        return sb.toString();
    }
}
