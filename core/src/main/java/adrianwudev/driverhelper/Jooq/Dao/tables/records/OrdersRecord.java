/*
 * This file is generated by jOOQ.
 */
package adrianwudev.driverhelper.Jooq.Dao.tables.records;


import adrianwudev.driverhelper.Jooq.Dao.tables.Orders;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record15;
import org.jooq.Row15;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record15<Integer, String, String, String, LocalDateTime, String, LocalDateTime, String, String, Double, Double, Boolean, Integer, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.orders.order_id</code>.
     */
    public void setOrderId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.orders.order_id</code>.
     */
    public Integer getOrderId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.orders.city</code>.
     */
    public void setCity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.orders.city</code>.
     */
    public String getCity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.orders.district</code>.
     */
    public void setDistrict(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.orders.district</code>.
     */
    public String getDistrict() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.orders.address</code>.
     */
    public void setAddress(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.orders.address</code>.
     */
    public String getAddress() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.orders.order_time</code>.
     */
    public void setOrderTime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.orders.order_time</code>.
     */
    public LocalDateTime getOrderTime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.orders.pick_up_drop</code>.
     */
    public void setPickUpDrop(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.orders.pick_up_drop</code>.
     */
    public String getPickUpDrop() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.orders.pick_up_time</code>.
     */
    public void setPickUpTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.orders.pick_up_time</code>.
     */
    public LocalDateTime getPickUpTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.orders.weekday</code>.
     */
    public void setWeekday(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.orders.weekday</code>.
     */
    public String getWeekday() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.orders.group_name</code>.
     */
    public void setGroupName(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.orders.group_name</code>.
     */
    public String getGroupName() {
        return (String) get(8);
    }

    /**
     * Setter for <code>public.orders.amount</code>.
     */
    public void setAmount(Double value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.orders.amount</code>.
     */
    public Double getAmount() {
        return (Double) get(9);
    }

    /**
     * Setter for <code>public.orders.distance</code>.
     */
    public void setDistance(Double value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.orders.distance</code>.
     */
    public Double getDistance() {
        return (Double) get(10);
    }

    /**
     * Setter for <code>public.orders.is_exception</code>.
     */
    public void setIsException(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.orders.is_exception</code>.
     */
    public Boolean getIsException() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>public.orders.repeat_count</code>.
     */
    public void setRepeatCount(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.orders.repeat_count</code>.
     */
    public Integer getRepeatCount() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>public.orders.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(13, value);
    }

    /**
     * Getter for <code>public.orders.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>public.orders.modify_time</code>.
     */
    public void setModifyTime(LocalDateTime value) {
        set(14, value);
    }

    /**
     * Getter for <code>public.orders.modify_time</code>.
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(14);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record15 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row15<Integer, String, String, String, LocalDateTime, String, LocalDateTime, String, String, Double, Double, Boolean, Integer, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row15) super.fieldsRow();
    }

    @Override
    public Row15<Integer, String, String, String, LocalDateTime, String, LocalDateTime, String, String, Double, Double, Boolean, Integer, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row15) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Orders.ORDERS.ORDER_ID;
    }

    @Override
    public Field<String> field2() {
        return Orders.ORDERS.CITY;
    }

    @Override
    public Field<String> field3() {
        return Orders.ORDERS.DISTRICT;
    }

    @Override
    public Field<String> field4() {
        return Orders.ORDERS.ADDRESS;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Orders.ORDERS.ORDER_TIME;
    }

    @Override
    public Field<String> field6() {
        return Orders.ORDERS.PICK_UP_DROP;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Orders.ORDERS.PICK_UP_TIME;
    }

    @Override
    public Field<String> field8() {
        return Orders.ORDERS.WEEKDAY;
    }

    @Override
    public Field<String> field9() {
        return Orders.ORDERS.GROUP_NAME;
    }

    @Override
    public Field<Double> field10() {
        return Orders.ORDERS.AMOUNT;
    }

    @Override
    public Field<Double> field11() {
        return Orders.ORDERS.DISTANCE;
    }

    @Override
    public Field<Boolean> field12() {
        return Orders.ORDERS.IS_EXCEPTION;
    }

    @Override
    public Field<Integer> field13() {
        return Orders.ORDERS.REPEAT_COUNT;
    }

    @Override
    public Field<LocalDateTime> field14() {
        return Orders.ORDERS.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field15() {
        return Orders.ORDERS.MODIFY_TIME;
    }

    @Override
    public Integer component1() {
        return getOrderId();
    }

    @Override
    public String component2() {
        return getCity();
    }

    @Override
    public String component3() {
        return getDistrict();
    }

    @Override
    public String component4() {
        return getAddress();
    }

    @Override
    public LocalDateTime component5() {
        return getOrderTime();
    }

    @Override
    public String component6() {
        return getPickUpDrop();
    }

    @Override
    public LocalDateTime component7() {
        return getPickUpTime();
    }

    @Override
    public String component8() {
        return getWeekday();
    }

    @Override
    public String component9() {
        return getGroupName();
    }

    @Override
    public Double component10() {
        return getAmount();
    }

    @Override
    public Double component11() {
        return getDistance();
    }

    @Override
    public Boolean component12() {
        return getIsException();
    }

    @Override
    public Integer component13() {
        return getRepeatCount();
    }

    @Override
    public LocalDateTime component14() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component15() {
        return getModifyTime();
    }

    @Override
    public Integer value1() {
        return getOrderId();
    }

    @Override
    public String value2() {
        return getCity();
    }

    @Override
    public String value3() {
        return getDistrict();
    }

    @Override
    public String value4() {
        return getAddress();
    }

    @Override
    public LocalDateTime value5() {
        return getOrderTime();
    }

    @Override
    public String value6() {
        return getPickUpDrop();
    }

    @Override
    public LocalDateTime value7() {
        return getPickUpTime();
    }

    @Override
    public String value8() {
        return getWeekday();
    }

    @Override
    public String value9() {
        return getGroupName();
    }

    @Override
    public Double value10() {
        return getAmount();
    }

    @Override
    public Double value11() {
        return getDistance();
    }

    @Override
    public Boolean value12() {
        return getIsException();
    }

    @Override
    public Integer value13() {
        return getRepeatCount();
    }

    @Override
    public LocalDateTime value14() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value15() {
        return getModifyTime();
    }

    @Override
    public OrdersRecord value1(Integer value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrdersRecord value2(String value) {
        setCity(value);
        return this;
    }

    @Override
    public OrdersRecord value3(String value) {
        setDistrict(value);
        return this;
    }

    @Override
    public OrdersRecord value4(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public OrdersRecord value5(LocalDateTime value) {
        setOrderTime(value);
        return this;
    }

    @Override
    public OrdersRecord value6(String value) {
        setPickUpDrop(value);
        return this;
    }

    @Override
    public OrdersRecord value7(LocalDateTime value) {
        setPickUpTime(value);
        return this;
    }

    @Override
    public OrdersRecord value8(String value) {
        setWeekday(value);
        return this;
    }

    @Override
    public OrdersRecord value9(String value) {
        setGroupName(value);
        return this;
    }

    @Override
    public OrdersRecord value10(Double value) {
        setAmount(value);
        return this;
    }

    @Override
    public OrdersRecord value11(Double value) {
        setDistance(value);
        return this;
    }

    @Override
    public OrdersRecord value12(Boolean value) {
        setIsException(value);
        return this;
    }

    @Override
    public OrdersRecord value13(Integer value) {
        setRepeatCount(value);
        return this;
    }

    @Override
    public OrdersRecord value14(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public OrdersRecord value15(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public OrdersRecord values(Integer value1, String value2, String value3, String value4, LocalDateTime value5, String value6, LocalDateTime value7, String value8, String value9, Double value10, Double value11, Boolean value12, Integer value13, LocalDateTime value14, LocalDateTime value15) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(Integer orderId, String city, String district, String address, LocalDateTime orderTime, String pickUpDrop, LocalDateTime pickUpTime, String weekday, String groupName, Double amount, Double distance, Boolean isException, Integer repeatCount, LocalDateTime createTime, LocalDateTime modifyTime) {
        super(Orders.ORDERS);

        setOrderId(orderId);
        setCity(city);
        setDistrict(district);
        setAddress(address);
        setOrderTime(orderTime);
        setPickUpDrop(pickUpDrop);
        setPickUpTime(pickUpTime);
        setWeekday(weekday);
        setGroupName(groupName);
        setAmount(amount);
        setDistance(distance);
        setIsException(isException);
        setRepeatCount(repeatCount);
        setCreateTime(createTime);
        setModifyTime(modifyTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(adrianwudev.driverhelper.Jooq.Dao.tables.pojos.Orders value) {
        super(Orders.ORDERS);

        if (value != null) {
            setOrderId(value.getOrderId());
            setCity(value.getCity());
            setDistrict(value.getDistrict());
            setAddress(value.getAddress());
            setOrderTime(value.getOrderTime());
            setPickUpDrop(value.getPickUpDrop());
            setPickUpTime(value.getPickUpTime());
            setWeekday(value.getWeekday());
            setGroupName(value.getGroupName());
            setAmount(value.getAmount());
            setDistance(value.getDistance());
            setIsException(value.getIsException());
            setRepeatCount(value.getRepeatCount());
            setCreateTime(value.getCreateTime());
            setModifyTime(value.getModifyTime());
            resetChangedOnNotNull();
        }
    }
}
